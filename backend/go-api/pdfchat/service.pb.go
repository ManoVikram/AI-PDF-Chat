// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: service.proto

package pdfchat

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadPDFRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PdfName       string                 `protobuf:"bytes,1,opt,name=pdf_name,json=pdfName,proto3" json:"pdf_name,omitempty"`
	PdfContent    []byte                 `protobuf:"bytes,2,opt,name=pdf_content,json=pdfContent,proto3" json:"pdf_content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadPDFRequest) Reset() {
	*x = UploadPDFRequest{}
	mi := &file_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadPDFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPDFRequest) ProtoMessage() {}

func (x *UploadPDFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPDFRequest.ProtoReflect.Descriptor instead.
func (*UploadPDFRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *UploadPDFRequest) GetPdfName() string {
	if x != nil {
		return x.PdfName
	}
	return ""
}

func (x *UploadPDFRequest) GetPdfContent() []byte {
	if x != nil {
		return x.PdfContent
	}
	return nil
}

type UploadPDFResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadPDFResponse) Reset() {
	*x = UploadPDFResponse{}
	mi := &file_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadPDFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPDFResponse) ProtoMessage() {}

func (x *UploadPDFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPDFResponse.ProtoReflect.Descriptor instead.
func (*UploadPDFResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *UploadPDFResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AskQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Question      string                 `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AskQuestionRequest) Reset() {
	*x = AskQuestionRequest{}
	mi := &file_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AskQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskQuestionRequest) ProtoMessage() {}

func (x *AskQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskQuestionRequest.ProtoReflect.Descriptor instead.
func (*AskQuestionRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *AskQuestionRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

type AskQuestionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Answer        string                 `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AskQuestionResponse) Reset() {
	*x = AskQuestionResponse{}
	mi := &file_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AskQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskQuestionResponse) ProtoMessage() {}

func (x *AskQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskQuestionResponse.ProtoReflect.Descriptor instead.
func (*AskQuestionResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

func (x *AskQuestionResponse) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

var File_service_proto protoreflect.FileDescriptor

const file_service_proto_rawDesc = "" +
	"\n" +
	"\rservice.proto\x12\apdfchat\"N\n" +
	"\x10UploadPDFRequest\x12\x19\n" +
	"\bpdf_name\x18\x01 \x01(\tR\apdfName\x12\x1f\n" +
	"\vpdf_content\x18\x02 \x01(\fR\n" +
	"pdfContent\"+\n" +
	"\x11UploadPDFResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"0\n" +
	"\x12AskQuestionRequest\x12\x1a\n" +
	"\bquestion\x18\x01 \x01(\tR\bquestion\"-\n" +
	"\x13AskQuestionResponse\x12\x16\n" +
	"\x06answer\x18\x01 \x01(\tR\x06answer2\x9a\x01\n" +
	"\n" +
	"PDFService\x12B\n" +
	"\tUploadPDF\x12\x19.pdfchat.UploadPDFRequest\x1a\x1a.pdfchat.UploadPDFResponse\x12H\n" +
	"\vAskQuestion\x12\x1b.pdfchat.AskQuestionRequest\x1a\x1c.pdfchat.AskQuestionResponseB:Z8github.com/ManoVikram/AI-PDF-Chat/backend/go-api/pdfchatb\x06proto3"

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData []byte
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)))
	})
	return file_service_proto_rawDescData
}

var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_service_proto_goTypes = []any{
	(*UploadPDFRequest)(nil),    // 0: pdfchat.UploadPDFRequest
	(*UploadPDFResponse)(nil),   // 1: pdfchat.UploadPDFResponse
	(*AskQuestionRequest)(nil),  // 2: pdfchat.AskQuestionRequest
	(*AskQuestionResponse)(nil), // 3: pdfchat.AskQuestionResponse
}
var file_service_proto_depIdxs = []int32{
	0, // 0: pdfchat.PDFService.UploadPDF:input_type -> pdfchat.UploadPDFRequest
	2, // 1: pdfchat.PDFService.AskQuestion:input_type -> pdfchat.AskQuestionRequest
	1, // 2: pdfchat.PDFService.UploadPDF:output_type -> pdfchat.UploadPDFResponse
	3, // 3: pdfchat.PDFService.AskQuestion:output_type -> pdfchat.AskQuestionResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
